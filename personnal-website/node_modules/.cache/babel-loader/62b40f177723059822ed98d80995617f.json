{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, _toDisplayString(this.windowPrint), 1\n  /* TEXT */\n  );\n}","map":{"version":3,"mappings":";;uBACAA,oBAEM,KAFN,EAEM,IAFN,EAEMC,sBADCC,WACD,CAFN,EACkB;EAAA;EADlB","names":["_createElementBlock","_toDisplayString","windowPrint"],"sourceRoot":"","sources":["/Users/sbourdeau/dev/perso/site-web/site-main/personal-website/src/components/colorText.vue"],"sourcesContent":["<template>\n<div>\n{{this.windowPrint}}\n</div>\n    \n</template>\n\n<script>\n\nexport default {\n  name: 'colorText',\n  data (){\n    return{\n      windowPrint : '',\n    }\n  },\n  props: {\n    printSpeed: Number,\n    printableText: String,\n    printStatus: Boolean,\n  },\n  methods:{\n    async slowPrint(content){\n\n      const timer = ms => new Promise(res => setTimeout(res, ms))\n\n      for (let index = 0; index < content.length; index++) {\n        const element = content[index];\n        this.windowPrint += element\n         await timer(this.printSpeed);\n      }\n      this.$emit('printDone')\n    }\n  },\n  watch: {\n    printStatus: {\n      handler() {\n        this.slowPrint(this.printableText)\n      },\n    },\n  },\n  mounted(){\n    if (this.printStatus) {\n      this.slowPrint(this.printableText)\n    }\n  }\n}\n</script>\n\n"]},"metadata":{},"sourceType":"module"}